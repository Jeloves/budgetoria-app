@use "@styles/color";
@use "@styles/font";
@use "@styles/space";
@use "@styles/header";
@use "@styles/main";
@use "@styles/subpage";

.header {
	position: relative;

	& span {
		position: absolute;
		left: 50%;
		transform: translateX(-50%);
	}

	& button {
		position: absolute;
		right: 0;
		color: color.$green-500;
		padding-right: space.$s2;
	}
}

.main {
	// Button Reset
	& button {
		border: none;
		background: none;
	}

	& h1,
	h2 {
		text-align: start;
		margin: 0;
		padding: 0;
	}

	& input {
		background: none;
		padding: 0;
		border: none;
		outline: none;
	}
}

.balance {
	background-color: color.$gray-500;
	padding-top: space.$s4;
	padding-right: space.$s4;
	padding-bottom: space.$s8;
	padding-left: space.$s4;
	display: flex;
	flex-direction: column;
	align-items: center;
	gap: space.$s4;

	& div {
		width: 80%;
		height: space.$s6;
		display: flex;
		justify-content: center;
		border: space.$s0-1 solid color.$gray-400;
		border-radius: space.$s1;

		& button {
			width: 50%;
			border: space.$s0-1 solid color.$gray-400;
			color: color.$gray-100;
		}

		& .flow {
			background-color: color.$primary-dark;
		}
	}

	& input[type="text"] {
		width: 100%;
		text-align: center;
		font: font.$text-large;
		color: white;
	}
}
.inflow {
	background-color: color.$green-500;
}

.contentContainer {
	background-color: color.$secondary-dark;
	display: flex;
	justify-content: center;
}

.content {
	box-sizing: border-box;
	margin-top: calc(0rem - space.$s4);
	width: 85%;
	background-color: color.$primary-dark;
	border-radius: space.$s1;
	display: flex;
	flex-direction: column;
}

.otherTransactionData {
	width: 100%;
	height: space.$s16;
	display: flex;
	align-items: center;
	color: white;
	padding: 0;
	padding-right: space.$s3;

	& img {
		width: space.$s5;
		height: space.$s5;
		padding: 0 space.$s3;
	}

	& h2 {
		flex: 1;
		font: font.$text-regular;
	}
}

.calendar {
	max-height: 0;
	overflow: hidden;
	white-space: nowrap;

	& .border {
		padding: 0;
		margin: 0;
		margin-top: space.$s2;
		margin-left: calc(space.$s6 + space.$s5); // Width of icon within TransactionData
		grid-area: border;
		background-color: color.$gray-500;
		height: space.$s0-1;
		border: none;
		box-sizing: border-box;
	}
}
.showCalendar {
	max-height: 100%; /* Adjust as needed, a sufficiently large value */
	transition: max-height 0.5s ease-out;
}

.hideCalendar {
	max-height: 0;
	transition: max-height 0.5s ease-out;
}

// Custom Input Slider
.switch {
	position: relative;
	display: inline-block;
	width: space.$s12-1;
	height: space.$s6;

	& .switch input {
		opacity: 0;
		width: 0;
		height: 0;
	}

	& .slider {
		position: absolute;
		cursor: pointer;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-color: color.$gray-200;
		transition: 0.4s;
		border-radius: space.$s8-1;
	}

	& .slider:before {
		position: absolute;
		content: "";
		height: space.$s5;
		width: space.$s5;
		top: space.$s0-2;
		left: space.$s0-2;
		bottom: space.$s0-2;
		background-color: white;
		transition: 0.3s;
		border-radius: 50%;
	}

	& input:checked + .slider {
		background-color: color.$green;
	}

	& input:checked + .slider:before {
		transform: translateX(space.$s6-1);
	}
}

.memo {
	background-color: color.$primary-dark;
	min-height: space.$s25;
	box-sizing: border-box;
	margin-right: space.$s3;
	margin-left: calc(space.$s3 + space.$s5 + space.$s3);
	margin-top: calc(0rem - space.$s2);
	margin-bottom: space.$s3;
	flex: 1;
	color: color.$gray-100;
	font: font.$text-regular;
}
